plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.2.2'
group = 'com.github.dashiedev'
archivesBaseName = "DTNPaletteOfPaws-1.20.1"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

sourceSets {
    main {
        resources.srcDirs += 'src/generated/resources'
    }
}

minecraft {

    mappings channel: 'official', version: '1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            taskName 'dtnpaletteofpaws_client'
            workingDirectory file('run')
            property 'forge.logging.console.level', 'debug'
            mods {
                dtnpaletteofpaws.sources((SourceSet[]) [sourceSets.main])
            }
        }

        server {
            taskName 'dtnpaletteofpaws_server'
            workingDirectory file('run-server')
            property 'forge.logging.console.level', 'debug'
            mods {
                dtnpaletteofpaws.sources((SourceSet[]) [sourceSets.main])
            }
        }

        data {
            taskName 'dtnpaletteofpaws_data'
            workingDirectory file('run')
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'dtnpaletteofpaws', '--all', '--output', '"' + file('src/generated/resources/') + '"', '--existing', '"' + sourceSets.main.resources.srcDirs[0] + '"'
            mods {
                dtnpaletteofpaws.sources((SourceSet[]) [sourceSets.main])
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dir 'libs'
    }
}


dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly "blank:DoggyTalentsNext-1.20.1:1.18.31"
}

jar {
    from sourceSets.main.output

    manifest {
        attributes([
            "Specification-Title": "DTN's Palette of Paws",
            "Specification-Vendor": "dashiedev",
            "Specification-Version": project.version,
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" :"dashiedev",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named("processResources") {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

mixin {
    add sourceSets.main, "dtnpaletteofpaws.refmap.json"
    config 'dtnpaletteofpaws.mixins.json'
}